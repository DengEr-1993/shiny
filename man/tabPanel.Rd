% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap.R
\name{tabPanel}
\alias{tabPanel}
\alias{tabPanelBody}
\alias{navItem}
\alias{navSpacer}
\title{Create navigation items}
\usage{
tabPanel(title, ..., value = title, icon = NULL)

tabPanelBody(value, ..., icon = NULL)

navItem(...)

navSpacer()
}
\arguments{
\item{title}{\verb{[character(1)]}\cr A display title for the nav item.}

\item{...}{\verb{[UI elements]}\cr
\itemize{
\item For \code{tabPanel()}/\code{tabPanelBody()}: content to display when the tab is
active.
\item For \code{navItem()}: UI elements to place inside the nav (e.g., hyperlinks
\code{\link[=a]{a()}}, \code{\link[=actionButton]{actionButton()}}s, \code{\link[=textInput]{textInput()}}, etc).
}}

\item{value}{\verb{[character(1)]}\cr A value associate with a \code{tabPanel()} to
determine when it is selected. This value may be supplied to the relevant
nav container's \code{selected} argument to show the tab immediately on page
load. This value is also useful for programmatically updating the selected
tab via \code{\link[=updateTabsetPanel]{updateTabsetPanel()}}, \code{\link[=showTab]{showTab()}}, etc (updating selected tabs
this way is often useful for showing/hiding panels of content via other UI
controls like \code{\link[=radioButtons]{radioButtons()}} -- in this scenario, consider using
\code{\link[=tabPanelBody]{tabPanelBody()}} with \code{tabsetPanel(type = "hidden")}).}

\item{icon}{An \code{\link[=icon]{icon()}} to appear to the left of the nav item's \code{title}.}
}
\value{
A nav item that may be passed to a nav container (e.g. \code{\link[=tabsetPanel]{tabsetPanel()}}
or \code{\link[=navbarPage]{navbarPage()}}).
}
\description{
Create "nav items" for use inside "nav containers" (e.g., \code{\link[=tabsetPanel]{tabsetPanel()}} or
\code{\link[=navbarPage]{navbarPage()}}). Individual items are created with one of either \code{tabPanel()}
or \code{navItem()}. Any collection of nav items can be grouped together in a menu
with \code{navbarMenu()}.
}
\examples{

navItems <- list(
  tabPanel("a", "tab a"),
  tabPanel("b", "tab b"),
  navItem(
    tags$a(icon("github"), "Shiny", href = "https://github.com/rstudio/shiny", target = #' "_blank")
  ),
  navSpacer(),
  navbarMenu(
    "Other links", align = "right",
    tabPanel("b", "tab b"),
    navItem(
      tags$a(icon("r-project"), "RStudio", href = "https://rstudio.com", target = #' "_blank")
    )
  )
)

navbar <- navbarPage(
  title = "Title",
  theme = bslib::bs_theme("navbar-bg" = "#0062cc"),
  !!!navItems
)
if (interactive()) shinyApp(navbar, function(...) {})


tabset <- fluidPage(
  theme = bslib::bs_theme(),
  tabsetPanel(
    !!!navItems, type = "pills"
  )
)
if (interactive()) shinyApp(tabset, function(...) {})

navlist <- fluidPage(
  theme = bslib::bs_theme(),
  tags$head(tags$style(".tab-content * {height: 100vh}")),
  navlistPanel(!!!navItems)
)
if (interactive()) shinyApp(navlist, function(...) {})

}
\seealso{
\code{\link[=tabsetPanel]{tabsetPanel()}}, \code{\link[=navbarPage]{navbarPage()}}, \code{\link[=navlistPanel]{navlistPanel()}}
}
